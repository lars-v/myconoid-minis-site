---
import { getCollection } from 'astro:content';
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';
import Layout from '../../layouts/Layout.astro';
import Lightbox from '../../components/Lightbox.astro';

export const getStaticPaths = (async () => {
  const miniatures = await getCollection('miniatures');
  return miniatures.map((mini) => ({
    params: { slug: mini.slug },
    props: { mini },
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { mini } = Astro.props as Props;
const { Content } = await mini.render();

// Helper function to get first photo
function getFirstPhoto(mini: any) {
  return mini.data.photos?.[0]?.image || '/images/placeholder.jpg';
}

// Helper function to format pricing display
function formatPricing(pricing: any) {
  if (!pricing) return null;
  
  const sections = [];
  
  if (pricing.osrPriming) {
    const osrOptions = [];
    if (pricing.osrPriming.tabletop) osrOptions.push({ label: 'Tabletop Scale', price: pricing.osrPriming.tabletop });
    if (pricing.osrPriming.display) osrOptions.push({ label: 'Display Scale (54mm)', price: pricing.osrPriming.display });
    
    if (osrOptions.length > 0) {
      sections.push({ title: 'OSR Priming', options: osrOptions });
    }
  }
  
  if (pricing.unprimed) {
    const unprimedOptions = [];
    if (pricing.unprimed.tabletop) unprimedOptions.push({ label: 'Tabletop Scale', price: pricing.unprimed.tabletop });
    if (pricing.unprimed.display) unprimedOptions.push({ label: 'Display Scale (54mm)', price: pricing.unprimed.display });
    
    if (unprimedOptions.length > 0) {
      sections.push({ title: 'Unprimed', options: unprimedOptions });
    }
  }
  
  return sections.length > 0 ? sections : null;
}

const pricingSections = formatPricing(mini.data.pricing);
---

<Layout title={mini.data.title || 'Miniature Details'}>
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Header -->
      <div class="mb-8">
        <div class="flex items-start justify-between">
          <div>
            <h1 class="text-4xl font-bold mb-2 text-gray-900 dark:text-white">
              {mini.data.title || 'Untitled Miniature'}
            </h1>
            {mini.data.designer && (
              <p class="text-xl text-gray-600 dark:text-gray-300 mb-2">
                by {mini.data.designer}
              </p>
            )}
            {mini.data.scale && (
              <p class="text-lg text-gray-500 dark:text-gray-400">
                {mini.data.scale}
              </p>
            )}
          </div>
          
          {mini.data.featured && (
            <div class="bg-yellow-500 text-yellow-900 px-4 py-2 rounded-full font-bold">
              ‚≠ê FEATURED
            </div>
          )}
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
        <!-- Photos Section -->
        <div>
          <!-- Main Image -->
          <div class="mb-6">
            <img
              src={getFirstPhoto(mini)}
              alt={mini.data.photos?.[0]?.caption || mini.data.title || 'Main photo'}
              class="w-full rounded-lg shadow-lg clickable-image"
              data-caption={mini.data.photos?.[0]?.caption || `${mini.data.title} - Main Photo`}
              data-gallery={mini.slug}
            />
            {mini.data.photos?.[0]?.caption && (
              <p class="mt-2 text-sm text-gray-600 dark:text-gray-400 text-center italic">
                {mini.data.photos[0].caption}
              </p>
            )}
          </div>

          <!-- Additional Photos -->
          {mini.data.photos && mini.data.photos.length > 1 && (
            <div>
              <h3 class="text-lg font-semibold mb-3 text-gray-900 dark:text-white">
                Additional Photos
              </h3>
              <div class="grid grid-cols-2 gap-3">
                {mini.data.photos.slice(1).map((photo, index) => (
                  <div>
                    <img
                      src={photo.image}
                      alt={photo.caption || `${mini.data.title} gallery image ${index + 2}`}
                      class="w-full h-32 object-cover rounded-lg clickable-image hover:opacity-80 transition-opacity"
                      data-caption={photo.caption || `${mini.data.title} - Photo ${index + 2}`}
                      data-gallery={mini.slug}
                    />
                    {photo.caption && (
                      <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
                        {photo.caption}
                      </p>
                    )}
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        <!-- Details Section -->
        <div class="space-y-8">
          <!-- Basic Info -->
          <div>
            <h2 class="text-2xl font-semibold mb-4 text-gray-900 dark:text-white">Details</h2>
            <div class="space-y-3">
              {mini.data.designer && (
                <div class="flex">
                  <span class="font-semibold text-gray-700 dark:text-gray-300 w-32">Designer:</span>
                  <span class="text-gray-900 dark:text-white">{mini.data.designer}</span>
                </div>
              )}
              
              {mini.data.creatureType && (
                <div class="flex">
                  <span class="font-semibold text-gray-700 dark:text-gray-300 w-32">Creature Type:</span>
                  <span class="text-gray-900 dark:text-white">{mini.data.creatureType}</span>
                </div>
              )}
              
              {mini.data.scale && (
                <div class="flex">
                  <span class="font-semibold text-gray-700 dark:text-gray-300 w-32">Scale:</span>
                  <span class="text-gray-900 dark:text-white">{mini.data.scale}</span>
                </div>
              )}
            </div>
          </div>

          <!-- Description Content -->
          {mini.data.description && (
            <div>
              <h2 class="text-2xl font-semibold mb-4 text-gray-900 dark:text-white">Description</h2>
              <div class="prose dark:prose-invert max-w-none">
                <Content />
              </div>
            </div>
          )}

          <!-- Pricing Section -->
          {pricingSections && mini.data.forSale && (
            <div>
              <h2 class="text-2xl font-semibold mb-4 text-gray-900 dark:text-white">Pricing</h2>
              <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6">
                <div class="space-y-6">
                  {pricingSections.map((section) => (
                    <div>
                      <h3 class="text-lg font-semibold text-green-800 dark:text-green-200 mb-3">
                        {section.title}
                      </h3>
                      <div class="grid grid-cols-1 gap-3">
                        {section.options.map((option) => (
                          <div class="flex justify-between items-center py-2 px-4 bg-white dark:bg-gray-800 rounded border">
                            <span class="text-gray-700 dark:text-gray-300">{option.label}</span>
                            <span class="text-lg font-bold text-green-600 dark:text-green-400">
                              ${option.price}
                            </span>
                          </div>
                        ))}
                      </div>
                    </div>
                  ))}
                </div>
                
                <div class="mt-6 pt-4 border-t border-green-200 dark:border-green-700">
                  <p class="text-sm text-green-700 dark:text-green-300 text-center">
                    <strong>OSR Priming:</strong> Matte black primer with dry brushing highlights<br>
                    <strong>Unprimed:</strong> Raw resin, ready for your own paint scheme
                  </p>
                </div>
              </div>
            </div>
          )}

          <!-- Not For Sale Notice -->
          {!mini.data.forSale && (
            <div class="bg-gray-100 dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg p-6">
              <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300 mb-2">
                Display Piece
              </h3>
              <p class="text-gray-600 dark:text-gray-400">
                This miniature is not currently available for purchase. It's part of our showcase collection.
              </p>
            </div>
          )}
        </div>
      </div>

      <!-- Back to Gallery -->
      <div class="mt-12 text-center">
        <a
          href="/gallery"
          class="inline-flex items-center px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors font-medium"
        >
          <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          Back to Gallery
        </a>
      </div>
    </div>
  </main>
  
  <!-- Include the Lightbox component -->
  <Lightbox />
</Layout>